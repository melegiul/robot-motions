<!--
Copyright (c) 2018 Pilz GmbH & Co. KG

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="rviz" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gazebo" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="pipeline" default="pilz_command_planner" />
  <arg name="gripper" default="" />
  <arg name="world_name" default="worlds/empty.world" /> <!-- Note: the world_name is with respect to the
                                                                    GAZEBO_RESOURCE_PATH environmental variable -->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <group if="$(arg gazebo)">
	  <include file="$(find gazebo_ros)/launch/empty_world.launch">
		  <arg name="debug" value="$(arg debug)" />
		  <arg name="gui" value="$(arg gui)" />
		  <arg name="paused" value="$(arg paused)"/>
		  <arg name="use_sim_time" value="$(arg use_sim_time)"/>
		  <arg name="headless" value="$(arg headless)"/>
		  <arg name="world_name" value="$(arg world_name)"/>
	  </include>
  </group>

  <!-- Load the URDF into the ROS Parameter Server -->
  <include file="$(find prbt_moveit_config)/launch/move_group.launch">
      <arg name="publish_monitored_planning_scene" value="true" />
      <arg name="fake_execution" value="false"/>
      <arg name="moveit_manage_controllers" value="false"/>
      <arg name="pipeline" value="$(arg pipeline)" />
      <arg name="gripper" value="$(arg gripper)" />
  </include>

  <include file="$(find prbt_moveit_config)/launch/warehouse.launch">
      <arg name="moveit_warehouse_database_path" value="/home/indurob/warehouse" />
  </include>


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-param robot_description -urdf -model prbt "/>

  <!-- set pid parameters -->
  <rosparam ns="prbt" command="load" file="$(find prbt_gazebo)/config/gazebo_pid_gains.yaml" />

  <!-- ros_control robot launch file -->
  <rosparam ns="prbt" command="load" file="$(find prbt_support)/config/manipulator_controller.yaml" />
  <rosparam ns="prbt" command="load" file="$(find prbt_pg70_support)/config/gripper_controller.yaml" />
  <!-- set the standard controller -->
  <param name="prbt/manipulator_joint_trajectory_controller/type"
         value="position_controllers/JointTrajectoryController" />

  <node ns="prbt" name="controller_spawner" pkg="controller_manager" type="spawner"
        args="manipulator_joint_state_controller manipulator_joint_trajectory_controller --timeout 100" />

  <group if="$(arg rviz)">
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find p4)/uebung.rviz"/>
  </group>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <rosparam param="source_list">['/prbt/joint_states']</rosparam>
  </node>

  <node name="fake_override" pkg="prbt_hardware_support" type="fake_speed_override_node"/>

</launch>
